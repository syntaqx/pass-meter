/*!
 * pass-meter v1.0.1
 * https://github.com/syntaqx/pass-meter
 *
 * Copyright (c) 2021 Chase Pierce <syntaqx@gmail.com>
 * Released under the MIT license
 */

!function(e,t){"function"==typeof define&&define.amd?define("pass-meter",t):"object"==typeof module&&module.exports?module.exports=t():e.PassMeter=t()}("undefined"!=typeof window?window:this,function(){"use strict";function o(e){void 0===e?e={}:"function"==typeof e&&(e={afterTest:e}),this.options=n({},t,e)}var t={events:"keyup",afterTest:null,commonPasswords:["password","123456","12345678","1234","qwerty"]},n="function"!=typeof jQuery?function(){for(var e,t,n,o=arguments[0]||{},r=1,s=arguments.length;r<s;r++)if(null!==(e=arguments[r]))for(t in e)o[t],o!==(n=e[t])&&void 0!==n&&(o[t]=n);return o}:jQuery.extend;return o.prototype={constructor:o,checks:[{score:35,callback:function(e){return 8<=e.length}},{score:20,regex:new RegExp("[A-Z]")},{score:10,regex:new RegExp("[a-z]")},{score:10,regex:new RegExp("[0-9]")},{score:25,regex:new RegExp("\\W")},{score:-100,callback:function(e){return-1!==this.options.commonPasswords.indexOf(String(e).toLowerCase())}}],test:function(t){var n=this,o=0;return this.checks.forEach(function(e){e.hasOwnProperty("regex")?t.match(e.regex)&&(o+=e.score):e.hasOwnProperty("callback")&&e.callback.call(n,t)&&(o+=e.score)}),100<(o=o<0?0:o)&&(o=100),"function"==typeof this.options.afterTest&&this.options.afterTest(o,t),o}},"function"==typeof jQuery&&jQuery.fn&&(jQuery.fn.passMeter=function(n){return this.each(function(){var e,t=jQuery(this);t.data("pass-meter")||(e=new o(n),t.on(e.options.events,function(){e.test(this.value)}),t.data("pass-meter",e))})}),o});